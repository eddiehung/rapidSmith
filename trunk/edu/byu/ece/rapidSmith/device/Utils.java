/*
 * Copyright (c) 2010 Brigham Young University
 * 
 * This file is part of the BYU RapidSmith Tools.
 * 
 * BYU RapidSmith Tools is free software: you may redistribute it
 * and/or modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation, either version 2 of 
 * the License, or (at your option) any later version.
 * 
 * BYU RapidSmith Tools is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU 
 * General Public License for more details.
 * 
 * A copy of the GNU General Public License is included with the BYU
 * RapidSmith Tools. It can be found at doc/gpl2.txt. You may also 
 * get a copy of the license at <http://www.gnu.org/licenses/>.
 * 
 */
package edu.byu.ece.rapidSmith.device;

/*
 * This file was generated by:
 *   class edu.byu.ece.rapidSmith.util.TileAndPrimitiveEnumerator
 * Generated on:
 *   Thu Jan 20 16:38:35 2011
 * The following Xilinx families are supported:
 *   spartan2 spartan2e spartan3 spartan3a spartan3adsp spartan3e spartan6 virtex virtex2 virtex2p virtex4 virtex5 virtex6 virtexe 
 */

/**
 * This class serves as a method to translate Strings to and from 
 * PrimitiveTypes and TileTypes. 
 */
public class Utils{

	/**
	 * Returns a PrimitiveType enum based on the given string. If such
	 * an enum does not exist, it will return null.
	 * @param s The string to be converted to an enum type
	 * @return The PrimitiveType corresponding to the string s, null if none exists.
	 */
	public static PrimitiveType createPrimitiveType(String s){
		return PrimitiveType.valueOf(s);
	}

	/**
	 * Returns a TileType enum based on the given string s.  If such an enum
	 * does not exist, it will return null
	 * @param s The string to be converted to an enum type
	 * @return The TileType corresponding to String s, null if none exists.
	 */
	public static TileType createTileType(String s){
		return TileType.valueOf(s);
	}
}
