/*
 * Copyright (c) 2010 Brigham Young University
 * 
 * This file is part of the BYU RapidSmith Tools.
 * 
 * BYU RapidSmith Tools is free software: you may redistribute it 
 * and/or modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation, either version 2 of 
 * the License, or (at your option) any later version.
 * 
 * BYU RapidSmith Tools is distributed in the hope that it will be 
 * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU 
 * General Public License for more details.
 * 
 * A copy of the GNU General Public License is included with the BYU 
 * RapidSmith Tools. It can be found at doc/gpl2.txt. You may also 
 * get a copy of the license at <http://www.gnu.org/licenses/>.
 * 
 */
/* Generated By:JavaCC: Do not edit this line. DesignParserConstants.java */
package edu.byu.ece.rapidSmith.design.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface DesignParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DOUBLEQUOTE = 6;
  /** RegularExpression Id. */
  int COMMA = 7;
  /** RegularExpression Id. */
  int PERIOD = 8;
  /** RegularExpression Id. */
  int COLON = 9;
  /** RegularExpression Id. */
  int SEMICOLON = 10;
  /** RegularExpression Id. */
  int VER = 11;
  /** RegularExpression Id. */
  int PIP0 = 12;
  /** RegularExpression Id. */
  int PIP1 = 13;
  /** RegularExpression Id. */
  int PIP2 = 14;
  /** RegularExpression Id. */
  int PIP3 = 15;
  /** RegularExpression Id. */
  int VCC = 16;
  /** RegularExpression Id. */
  int VDD = 17;
  /** RegularExpression Id. */
  int GND = 18;
  /** RegularExpression Id. */
  int CFG = 19;
  /** RegularExpression Id. */
  int PIP = 20;
  /** RegularExpression Id. */
  int NET = 21;
  /** RegularExpression Id. */
  int LOAD = 22;
  /** RegularExpression Id. */
  int WIRE = 23;
  /** RegularExpression Id. */
  int PORT = 24;
  /** RegularExpression Id. */
  int INST = 25;
  /** RegularExpression Id. */
  int INPIN = 26;
  /** RegularExpression Id. */
  int POWER = 27;
  /** RegularExpression Id. */
  int PLACED = 28;
  /** RegularExpression Id. */
  int BONDED = 29;
  /** RegularExpression Id. */
  int GROUND = 30;
  /** RegularExpression Id. */
  int MODULE = 31;
  /** RegularExpression Id. */
  int ENDMODULE = 32;
  /** RegularExpression Id. */
  int DESIGN = 33;
  /** RegularExpression Id. */
  int OUTPIN = 34;
  /** RegularExpression Id. */
  int DRIVER = 35;
  /** RegularExpression Id. */
  int UNPLACED = 36;
  /** RegularExpression Id. */
  int UNBONDED = 37;
  /** RegularExpression Id. */
  int INSTANCE = 38;
  /** RegularExpression Id. */
  int UNQUOTED_STRING = 39;
  /** RegularExpression Id. */
  int QUOTED_STRING = 40;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "\"\\\"\"",
    "\",\"",
    "\".\"",
    "\":\"",
    "\";\"",
    "\"v\"",
    "\"==\"",
    "\"=-\"",
    "\"=>\"",
    "\"->\"",
    "\"vcc\"",
    "\"vdd\"",
    "\"gnd\"",
    "\"cfg\"",
    "\"pip\"",
    "\"net\"",
    "\"load\"",
    "\"wire\"",
    "\"port\"",
    "\"inst\"",
    "\"inpin\"",
    "\"power\"",
    "\"placed\"",
    "\"bonded\"",
    "\"ground\"",
    "\"module\"",
    "\"endmodule\"",
    "\"design\"",
    "\"outpin\"",
    "\"driver\"",
    "\"unplaced\"",
    "\"unbonded\"",
    "\"instance\"",
    "<UNQUOTED_STRING>",
    "<QUOTED_STRING>",
  };

}
